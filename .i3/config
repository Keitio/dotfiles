#

# General

set $mod Mod4
floating_modifier $mod

set $term urxvt
set $browser firefox-nightly
#set $filemanager pcmanfm
set $filemanager urxvt -e ranger
set $music terminal -e 'mocp'
set $clock urxvt ++scrollBar -e tty-clock -c

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window none
new_float none

# Hide borders
hide_edge_borders none

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:Noto Sans 10

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# Set inner/outer gaps
gaps inner 10
gaps outer -10

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on


# Color palette used for the terminal ( ~/.extend.Xresources file )
# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
set_from_resource $term_background background
set_from_resource $term_foreground foreground
set_from_resource $term_color0     color0
set_from_resource $term_color1     color1
set_from_resource $term_color2     color2
set_from_resource $term_color3     color3
set_from_resource $term_color4     color4
set_from_resource $term_color5     color5
set_from_resource $term_color6     color6
set_from_resource $term_color7     color7
set_from_resource $term_color8     color8
set_from_resource $term_color9     color9
set_from_resource $term_color10    color10
set_from_resource $term_color11    color11
set_from_resource $term_color12    color12
set_from_resource $term_color13    color13
set_from_resource $term_color14    color14
set_from_resource $term_color15    color15

set_from_resource $i3_transparent         background
set_from_resource $i3_background          background
set_from_resource $i3_foreground          foreground
set $i3_text                              #ffffff
set $i3_separator                         #ffffff
set_from_resource $i3_color1              color1
set_from_resource $i3_color2              color2
set_from_resource $i3_color3              color3
set_from_resource $i3_color4              color4
set_from_resource $i3_color5              color5
set_from_resource $i3_color6              color6
set_from_resource $i3_color7              color7
set_from_resource $i3_color8              color8
set_from_resource $i3_color9              color9
set_from_resource $i3_color10             color10
set_from_resource $i3_color11             color11
set_from_resource $i3_color12             color12
set_from_resource $i3_color13             color13
set_from_resource $i3_color14             color14
set_from_resource $i3_color15             color15
set $i3_color16                           #ffffff
set $i3_color17                           #0c0c0c

# Theme colors
# class                 border      backgr.     text        indic.      child_border

client.focused          $foreground $background $foreground $color2     $color2 
client.unfocused        $foreground $background $foreground $color4     $color4
client.focused_inactive $foreground $background $foreground $color4     $color4
client.urgent           $foreground $background $foreground $color4     $color4
client.placeholder      $foreground $background $foreground $color4     $color4

client.background   $background


# Start i3bar to display a workspace bar (plus the system information i3status if available)

bar {
#    i3bar_command i3bar -t
    status_command i3status
    strip_workspace_numbers yes
    position top
    mode hide

## please set your primary output first. Example: 'xrandr --output eDP1 --primary'
#   tray_output primary
#   tray_output eDP1

    bindsym button4 nop
    bindsym button5 nop
    font xft:Noto Sans 10

    colors {
        background $i3_background
        statusline $i3_color4
        separator  $i3_color6

#                           border          backgr.         text
        focused_workspace   $i3_background  $i3_color4      $i3_text
        active_workspace    $i3_color2      $i3_background  $i3_color5
        inactive_workspace  $i3_background  $i3_background  $i3_color6
        urgent_workspace    $i3_color4      $i3_color5      $i3_color7
    }
}



# Autostart applications
exec --no-startup-id volumeicon
exec --no-startup-id pulseaudio
exec --no-startup-id pa-applet

exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id nm-applet
exec --no-startup-id xfce4-power-manager
# exec --no-startup-id pamac-tray
exec --no-startup-id clipit
# exec --no-startup-id xautolock -time 10 -locker blurlock
exec_always --no-startup-id fix_xcursor

# autows layout
exec --no-startup-id i3-msg "workspace $ws1; append_layout /home/unclek/.i3/workspace1.json"
exec --no-startup-id i3-msg "workspace $ws2; append_layout /home/unclek/.i3/workspace2.json"
exec --no-startup-id i3-msg "workspace $ws3; append_layout /home/unclek/.i3/workspace3.json"

exec --no-startup-id exec compton

exec --no-startup-id exec $browser
exec --no-startup-id exec subl
exec --no-startup-id exec $term
exec --no-startup-id /home/unclek/Scripts/changewall


# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1  "1:"
set $ws2  "2:"
set $ws3  "3:"
set $ws4  "4:4"
set $ws5  "5:5"
set $ws6  "6:6"
set $ws7  "7:7"
set $ws8  "8:"
set $ws9  "9:9"
set $ws10 "10:"

#          

# Open applications on specific workspaces
# assign [class="Thunderbird"] $ws1
# assign [class="Pale moon"] $ws2
# assign [class="Pcmanfm"] $ws3
# assign [class="Skype"] $ws5


set $mode_system <caps_>(l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    #Caps_Lock
    bindsym Escape exec --no-startup-id i3exit lock, mode "default"

    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width   5 px or 5 ppt
        bindsym j resize grow   height  5 px or 5 ppt
        bindsym k resize shrink height  5 px or 5 ppt
        bindsym l resize grow   width   5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 1 px or 1 ppt
        bindsym Down resize grow height 1 px or 1 ppt
        bindsym Up resize shrink height 1 px or 1 ppt
        bindsym Right resize grow width 1 px or 1 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

set $mode_gaps Gaps: (o) outer, (i) inner
mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

set $mode_gaps_inner Inner Gaps: (p)lus (m)inus (d)efault (Shift for global)
mode "$mode_gaps_inner" {
        bindsym p   gaps inner current plus 5
        bindsym m   gaps inner current minus 5
        bindsym d   gaps inner current set 0

        bindsym Shift+p   gaps inner all plus 5
        bindsym Shift+m   gaps inner all minus 5
        bindsym Shift+d   gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

set $mode_gaps_outer Outer Gaps: (p)lus (m)inus (d)efault (Shift for global)
mode "$mode_gaps_outer" {
        bindsym p   gaps outer current plus 5
        bindsym m   gaps outer current minus 5
        bindsym d   gaps outer current set 0

        bindsym Shift+p   gaps outer all plus 5
        bindsym Shift+m   gaps outer all minus 5
        bindsym Shift+d   gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

set $mode_config Settings: (g)aps (p)ower (r)esize
mode "$mode_config" {
        bindsym g mode "$mode_gaps"
        bindsym p mode "$mode_system"
        bindsym r mode "resize"

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# BINDINGS

bindsym $mod+c mode "$mode_config"

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# sound settings
bindsym $mod+Ctrl+m exec pavucontrol
#bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill

# start program launchers
bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+space exec --no-startup-id rofi -show run -lines 5 -opacity "80"

# launch categorized menu
bindsym $mod+z exec --no-startup-id morc_menu

# change wallpaper
bindsym $mod+b exec /home/unclek/Scripts/callwall

# toggle touchpad on and off
bindsym XF86TouchpadToggle exec --no-startup-id /home/unclek/Scripts/.touchpadtoggle

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

# Start Applications
bindsym $mod+Ctrl+b exec terminal -e 'bmenu'
bindsym $mod+F2 exec $browser
bindsym $mod+F3 exec $filemanager
bindsym $mod+Shift+F3 exec gksu $filemanager
bindsym $mod+F5 exec $music
bindsym $mod+t exec --no-startup-id pkill compton
bindsym $mod+Ctrl+t exec --no-startup-id compton -b
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym Print exec --no-startup-id i3-scrot
bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# change focus
bindsym $mod+Left  focus left
bindsym $mod+Down  focus down
bindsym $mod+Up    focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left  move left
bindsym $mod+Shift+Down  move down
bindsym $mod+Shift+Up    move up
bindsym $mod+Shift+Right move right

# split orientation
bindsym $mod+g split h
bindsym $mod+v split v
bindsym $mod+q split toggle

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# startup of the hidden terminal "metask"
exec --no-startup-id urxvt -name metask
# start it up if close the workspace (mod+q)
bindsym $mod+SHIFT+o exec --no-startup-id urxvt -name metask
# the actual conf for the dropdown terminal size
for_window [instance="metask"] move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
# Bind Escape keyboard key
bindcode 9 scratchpad show

# Bind misc. keys
exec --no-startup-id xmodmap /home/unclek/Scripts/modmap


#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# switch to workspace
bindcode $mod+10 workspace $ws1
bindcode $mod+11 workspace $ws2
bindcode $mod+12 workspace $ws3
bindcode $mod+13 workspace $ws4
bindcode $mod+14 workspace $ws5
bindcode $mod+15 workspace $ws6
bindcode $mod+16 workspace $ws7
bindcode $mod+17 workspace $ws8
bindcode $mod+18 workspace $ws9
bindcode $mod+19 workspace $ws10

# Move to workspace with focused container
bindcode $mod+Shift+10 move container to workspace $ws1;  workspace $ws1
bindcode $mod+Shift+11 move container to workspace $ws2;  workspace $ws2
bindcode $mod+Shift+12 move container to workspace $ws3;  workspace $ws3
bindcode $mod+Shift+13 move container to workspace $ws4;  workspace $ws4
bindcode $mod+Shift+14 move container to workspace $ws5;  workspace $ws5
bindcode $mod+Shift+15 move container to workspace $ws6;  workspace $ws6
bindcode $mod+Shift+16 move container to workspace $ws7;  workspace $ws7
bindcode $mod+Shift+17 move container to workspace $ws8;  workspace $ws8
bindcode $mod+Shift+18 move container to workspace $ws9;  workspace $ws9
bindcode $mod+Shift+19 move container to workspace $ws10; workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
# bindsym $mod+0 mode "$mode_system"
bindcode 124 mode "$mode_system"

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"

bindsym $mod+Shift+g mode "$mode_gaps"

# hide/unhide i3status bar
bindsym $mod+m bar mode toggle



